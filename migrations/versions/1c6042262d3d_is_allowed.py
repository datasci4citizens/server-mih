"""is_allowed

Revision ID: 1c6042262d3d
Revises: 8564f51fecb8
Create Date: 2024-11-27 11:09:58.085342

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1c6042262d3d'
down_revision: Union[str, None] = '8564f51fecb8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_allowed', sa.Boolean(), nullable=True))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('user', 'role',
               existing_type=postgresql.ENUM('RESPONSIBLE', 'SPECIALIST', name='userrole'),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'role',
               existing_type=postgresql.ENUM('RESPONSIBLE', 'SPECIALIST', name='userrole'),
               nullable=True)
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'created_at')
    op.drop_column('user', 'is_allowed')
    # ### end Alembic commands ###
